version: '3.7'

services:
  prediction_service:
    build:
      context: prediction_service
      dockerfile: Dockerfile
    depends_on:
      - evidently_service
      # - mongo
      - postgres
    environment:
      EVIDENTLY_SERVICE: "http://evidently_service.:8877"
      # MONGODB_ADDRESS: "mongodb://mongo.:27017/"
      POSTGRES_HOST: "postgres"
      POSTGRES_PORT: "5432"
      POSTGRES_DATABASE: "mlflow"
      POSTGRES_USER: "mlflow"
      POSTGRES_PASSWORD: "mlflow"
    ports:
      - "9696:9696"
    networks:
      - backend
      - frontend

  evidently_service:
    build:
      context: evidently_service
      dockerfile: Dockerfile
    depends_on:
      - grafana
    volumes:
      - ./evidently_service/datasets:/app/datasets
      - ./evidently_service/config.yaml:/app/config.yaml
    ports:
      - "8877:8877"
    networks:
      - backend
      - frontend

  prometheus:
    image: prom/prometheus
    depends_on:
      # - mongo
      - postgres
    volumes:
      - ./evidently_service/config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - "9091:9090"
    networks:
      - backend
    restart: always

  grafana:
    image: grafana/grafana
    user: "472"
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    volumes:
      - ./evidently_service/config/grafana_datasources.yml:/etc/grafana/provisioning/datasources/grafana_datasources.yml:ro
      - ./evidently_service/config/grafana_dashboards.yml:/etc/grafana/provisioning/dashboards/grafana_dashboards.yml:ro
      - ./evidently_service/dashboards:/opt/grafana/dashboards
      - grafana_data:/var/lib/grafana
    networks:
      - backend
      - frontend
    restart: always
    
  postgres:
    restart: always
    image: postgres
    environment:
      - POSTGRES_USER=mlflow
      - POSTGRES_PASSWORD=mlflow
      - POSTGRES_DATABASE=mlflow
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgres/data
    networks:
      - backend

volumes:
    prometheus_data: {}
    grafana_data: {}
    postgres_data: {}

networks:
  frontend:
  backend:

